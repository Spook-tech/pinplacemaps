{% comment %}
  Renders product variant-picker

  Accepts:
  - product: {Object} product object.
  - block: {Object} passing the block information.
  - product_form_id: {String} Id of the product form to which the variant picker is associated.
  Usage:
  {% render 'product-variant-picker', product: product, block: block, product_form_id: product_form_id %}
{% endcomment %}
{%- unless product.has_only_default_variant -%}
  <variant-selects
    class="size-selector"
    id="variant-selects-{{ section.id }}"
    data-section="{{ section.id }}"
    {{ block.shopify_attributes }}
  >
    {%- for option in product.options_with_values -%}
      {%- liquid
        assign swatch_count = option.values | map: 'swatch' | compact | size
        assign picker_type = block.settings.picker_type

        if swatch_count > 0 and block.settings.swatch_shape != 'none'
          if block.settings.picker_type == 'dropdown'
            assign picker_type = 'swatch_dropdown'
          else
            assign picker_type = 'swatch'
          endif
        endif
      -%}
      {%- if picker_type == 'swatch' -%}
        <fieldset class="js product-form__input color-selector">
          <div class="color-label">
            <b>{{ option.name }}:</b>
            <span id="selected-color-name" data-selected-value>
              {{- option.selected_value -}}
            </span>
            <div
              id="selected-color-circle"
              class="color-option"
              style="background-color: var(--color-gold);"
            ></div>
          </div>

          <p>1 box - 100 pins</p>

          <script>
            if (document.getElementById('color-palette')) {
              const buttonPalette = document.getElementById('color-palette');
              const colorPalette = document.querySelector('.color-options');
              const colorOptions = document.querySelectorAll('.color-option');
              const selectedColorName = document.getElementById('selected-color-name');
              const selectedColorCircle = document.getElementById('selected-color-circle');

              const currentColorElement = document.querySelector('#current-color-hidden');

              if (currentColorElement.dataset.color) {
                selectedColorCircle.style.backgroundColor = currentColorElement.dataset.color;
              }

              buttonPalette.addEventListener('click', function () {
                this.classList.toggle('active'); // Работает корректно, так как используется обычная функция
                colorPalette.classList.toggle('show');
              });

              colorOptions.forEach(option => {
                option.addEventListener('click', () => {
                  // Удаляем класс active со всех опций
                  colorOptions.forEach(opt => opt.classList.remove('active'));

                  // Добавляем active к выбранной
                  option.classList.add('active');

                  // Обновляем текст и круг выбранного цвета
                  const color = option.querySelector('.swatch').style.cssText;
                  console.log(color);
                  const match = color.match(/rgb\(\d+\s\d+\s\d+\)/)[0];


                  const colorName = option.getAttribute('data-color');
                  selectedColorName.textContent = colorName;
                  if (match){
                    currentColorElement.dataset.color = match;
                    selectedColorCircle.style.backgroundColor = match;
                  }
                });
              });
            }
          </script>

          <div class="color-actions">
            <div class="color-options">
              {% render 'product-variant-options',
                product: product,
                option: option,
                block: block,
                picker_type: picker_type
              %}
            </div>
            <div class="icon" id="color-palette">
              <svg
                width="12"
                height="12"
                viewBox="0 0 12 12"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path d="M3.95251 10.0942L8.04747 5.99926L3.95251 1.9043" stroke="black"
                    stroke-linecap="round" stroke-linejoin="round" />
              </svg>
            </div>
          </div>
        </fieldset>
      {%- elsif picker_type == 'button' -%}
        {% if option.name == 'Map size' or option.name == 'Kartengröße'  %}
          <div class="top">
            <span class="form__label title">{{ option.name }}:</span>
            <button data-show-guide class="title"><img src="{{  'Frame.svg' | asset_url }}" alt="">Size guide</button>
          </div>
          <fieldset class="js product-form__input bottom">
            {% render 'product-variant-options',
              product: product,
              option: option,
              block: block,
              picker_type: picker_type
            %}
          </fieldset>
        {% else %}
          <fieldset class="js product-form__input product-form__input--pill">
            <legend class="form__label">{{ option.name }}</legend>
            {% render 'product-variant-options',
              product: product,
              option: option,
              block: block,
              picker_type: picker_type
            %}
          </fieldset>
        {% endif %}
      {%- else -%}
        <div class="product-form__input product-form__input--dropdown">
          <label class="form__label" for="Option-{{ section.id }}-{{ forloop.index0 }}">
            {{ option.name }}
          </label>
          <div class="select">
            {%- if picker_type == 'swatch_dropdown' -%}
              <span
                data-selected-value
                class="dropdown-swatch"
              >
                {% render 'swatch', swatch: option.selected_value.swatch, shape: block.settings.swatch_shape %}
              </span>
            {%- endif -%}
            <select
              id="Option-{{ section.id }}-{{ forloop.index0 }}"
              class="select__select"
              name="options[{{ option.name | escape }}]"
              form="{{ product_form_id }}"
            >
              {% render 'product-variant-options',
                product: product,
                option: option,
                block: block,
                picker_type: picker_type
              %}
            </select>
            <span class="svg-wrapper">
              {{- 'icon-caret.svg' | inline_asset_content -}}
            </span>
          </div>
        </div>
      {%- endif -%}
    {%- endfor -%}

    <script type="application/json" data-selected-variant>
      {{ product.selected_or_first_available_variant | json }}
    </script>
  </variant-selects>
{%- endunless -%}
