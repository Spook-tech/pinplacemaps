<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä CSV –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –≤ Loox</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container {
            background: white;
            border-radius: 8px;
            padding: 30px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        h1 {
            color: #333;
            text-align: center;
            margin-bottom: 30px;
        }
        .section {
            margin-bottom: 30px;
        }
        .section h2 {
            color: #555;
            border-bottom: 2px solid #4CAF50;
            padding-bottom: 10px;
        }
        textarea {
            width: 100%;
            min-height: 200px;
            padding: 15px;
            border: 1px solid #ddd;
            border-radius: 4px;
            font-family: monospace;
            font-size: 14px;
            resize: vertical;
        }
        button {
            background-color: #4CAF50;
            color: white;
            padding: 12px 24px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            margin: 10px 5px;
        }
        button:hover {
            background-color: #45a049;
        }
        .download-btn {
            background-color: #2196F3;
        }
        .download-btn:hover {
            background-color: #1976D2;
        }
        .info {
            background-color: #e8f5e8;
            padding: 15px;
            border-radius: 4px;
            margin-bottom: 20px;
        }
        .warning {
            background-color: #fff3cd;
            padding: 15px;
            border-radius: 4px;
            margin-bottom: 20px;
            border-left: 4px solid #ffc107;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        th, td {
            border: 1px solid #ddd;
            padding: 12px;
            text-align: left;
        }
        th {
            background-color: #f2f2f2;
            font-weight: bold;
        }
        .code-block {
            background-color: #f8f9fa;
            border: 1px solid #dee2e6;
            border-radius: 4px;
            padding: 15px;
            font-family: monospace;
            font-size: 14px;
            overflow-x: auto;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üîÑ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä CSV –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –æ—Ç–∑—ã–≤–æ–≤ –≤ Loox</h1>
        
        <div class="info">
            <strong>üìã –ü–æ–ª—è –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –≤ Loox:</strong> product_handle, rating, author, email, body, created_at, photo_url, verified_purchase
        </div>

        <div class="section">
            <h2>1. Liquid –∫–æ–¥ –¥–ª—è Shopify</h2>
            <div class="warning">
                <strong>‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ:</strong> –î–æ–±–∞–≤—å—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ —à–∞–±–ª–æ–Ω Shopify –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ JSON —Å –æ—Ç–∑—ã–≤–∞–º–∏
            </div>
            <div class="code-block" id="liquidCode">
{% assign all_reviews = '' %}
{% for product in collections.all.products %}
  {% for review in product.metafields.custom.reviews.value %}
    {% capture review_json %}
    {
      "product_handle": "{{ product.handle | replace: '"', '\\"' }}",
      "rating": {{ review.rating }},
      "author": "{{ review.author | replace: '"', '\\"' | replace: '\', '\\\\' }}",
      "email": "",
      "body": "{{ review.text | replace: '"', '\\"' | replace: '\', '\\\\' | replace: '\n', '\\n' | replace: '\r', '\\r' | replace: '\t', '\\t' }}",
      "created_at": "{{ review.date }}",
      {% assign first_image = review.images.value | first %}
      {% assign image_url = first_image | image_url: width: first_image.width %}
      "photo_url": "{{ image_url }}",
      "verified_purchase": "true"
    }
    {% endcapture %}
    
    {% if all_reviews == '' %}
      {% assign all_reviews = review_json %}
    {% else %}
      {% assign all_reviews = all_reviews | append: ',' | append: review_json %}
    {% endif %}
  {% endfor %}
{% endfor %}

[{{ all_reviews }}]
            </div>
            <button onclick="copyCode()">üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥</button>
        </div>

        <div class="section">
            <h2>2. –í—Å—Ç–∞–≤—å—Ç–µ JSON –¥–∞–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤–æ–≤</h2>
            <textarea id="jsonInput" placeholder='–í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ JSON –º–∞—Å—Å–∏–≤ —Å –æ—Ç–∑—ã–≤–∞–º–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
[
  {
    "product_handle": "product-name",
    "rating": 5,
    "author": "Annette Springer",
    "email": "",
    "body": "Very pleased with this purchase...",
    "created_at": "2024-12-01",
    "photo_url": "",
    "verified_purchase": "true"
  }
]'></textarea>
            <button onclick="convertToCSV()">üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ CSV</button>
            <button onclick="cleanJSON()">üßπ –û—á–∏—Å—Ç–∏—Ç—å JSON</button>
        </div>

        <div class="section">
            <h2>3. –†–µ–∑—É–ª—å—Ç–∞—Ç CSV</h2>
            <textarea id="csvOutput" readonly placeholder="–ó–¥–µ—Å—å –ø–æ—è–≤–∏—Ç—Å—è CSV –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –≤ Loox..."></textarea>
            <button class="download-btn" onclick="downloadCSV()">‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å CSV —Ñ–∞–π–ª</button>
            <button onclick="copyCSV()">üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å CSV</button>
        </div>

        <div class="section">
            <h2>üìä –ü—Ä–∏–º–µ—Ä —Å—Ç—Ä—É–∫—Ç—É—Ä—ã CSV</h2>
            <table>
                <thead>
                    <tr>
                        <th>product_handle</th>
                        <th>rating</th>
                        <th>author</th>
                        <th>email</th>
                        <th>body</th>
                        <th>created_at</th>
                        <th>photo_url</th>
                        <th>verified_purchase</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>custom-mug</td>
                        <td>5</td>
                        <td>Annette Springer</td>
                        <td></td>
                        <td>Very pleased with this purchase...</td>
                        <td>2024-12-01</td>
                        <td>https://cdn.shopify.com/...</td>
                        <td>true</td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div class="info">
            <strong>üí° –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:</strong>
            <ol>
                <li>–°–∫–æ–ø–∏—Ä—É–π—Ç–µ Liquid –∫–æ–¥ –∏ –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ —à–∞–±–ª–æ–Ω Shopify</li>
                <li>–ó–∞–º–µ–Ω–∏—Ç–µ YOUR_SHOP_ID –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π ID –º–∞–≥–∞–∑–∏–Ω–∞</li>
                <li>–ü–æ–ª—É—á–∏—Ç–µ JSON –¥–∞–Ω–Ω—ã–µ –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –∏—Ö –≤ –ø–æ–ª–µ –≤—ã—à–µ</li>
                <li>–ù–∞–∂–º–∏—Ç–µ "–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ CSV"</li>
                <li>–°–∫–∞—á–∞–π—Ç–µ –≥–æ—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ –≤ Loox</li>
            </ol>
        </div>
    </div>

    <script>
        function copyCode() {
            const code = document.getElementById('liquidCode').textContent;
            navigator.clipboard.writeText(code).then(() => {
                alert('–ö–æ–¥ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
            });
        }

        function cleanJSON() {
            let jsonInput = document.getElementById('jsonInput').value.trim();
            
            if (!jsonInput) {
                alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Å—Ç–∞–≤—å—Ç–µ JSON –¥–∞–Ω–Ω—ã–µ');
                return;
            }

            // –û—á–∏—â–∞–µ–º JSON –æ—Ç –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
            let cleanedJSON = jsonInput
                .replace(/^\s*\d+\.\s*/gm, '')     // –£–±–∏—Ä–∞–µ–º –Ω—É–º–µ—Ä–∞—Ü–∏—é —Å—Ç—Ä–æ–∫
                .replace(/\s*\*\s*/g, '')          // –£–±–∏—Ä–∞–µ–º –∑–≤–µ–∑–¥–æ—á–∫–∏
                .replace(/,\s*\n\s*}/g, '\n}')     // –£–±–∏—Ä–∞–µ–º –∑–∞–ø—è—Ç—ã–µ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–º–∏ —Å–∫–æ–±–∫–∞–º–∏
                .replace(/\\\\/g, '\\')            // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –¥–≤–æ–π–Ω—ã–µ —Å–ª—ç—à–∏
                .replace(/\\"/g, '"')              // –£–±–∏—Ä–∞–µ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–≤—ã—á–µ–∫
                .replace(/\n\s*\n/g, '\n')         // –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
                .trim();

            document.getElementById('jsonInput').value = cleanedJSON;
            alert('‚úÖ JSON –æ—á–∏—â–µ–Ω! –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ CSV');
        }

        function convertToCSV() {
            let jsonInput = document.getElementById('jsonInput').value.trim();
            
            if (!jsonInput) {
                alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—Å—Ç–∞–≤—å—Ç–µ JSON –¥–∞–Ω–Ω—ã–µ');
                return;
            }

            try {
                // –£–±–∏—Ä–∞–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –∏–∑ JSON
                jsonInput = jsonInput
                    .replace(/^\s*\d+\.\s*/gm, '')  // –£–±–∏—Ä–∞–µ–º –Ω—É–º–µ—Ä–∞—Ü–∏—é —Å—Ç—Ä–æ–∫
                    .replace(/\s*\*\s*/g, '')       // –£–±–∏—Ä–∞–µ–º –∑–≤–µ–∑–¥–æ—á–∫–∏
                    .replace(/,\s*\n\s*}/g, '\n}')  // –£–±–∏—Ä–∞–µ–º –∑–∞–ø—è—Ç—ã–µ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏–º–∏ —Å–∫–æ–±–∫–∞–º–∏
                    .replace(/\\\\/g, '\\')         // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º –¥–≤–æ–π–Ω—ã–µ —Å–ª—ç—à–∏
                    .replace(/\\"/g, '"');          // –£–±–∏—Ä–∞–µ–º —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–≤—ã—á–µ–∫

                const reviews = JSON.parse(jsonInput);
                
                if (!Array.isArray(reviews)) {
                    throw new Error('JSON –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–∞—Å—Å–∏–≤–æ–º');
                }

                // CSV –∑–∞–≥–æ–ª–æ–≤–∫–∏
                const headers = ['product_handle', 'rating', 'author', 'email', 'body', 'created_at', 'photo_url', 'verified_purchase'];
                let csv = headers.join(',') + '\n';

                // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –æ—Ç–∑—ã–≤
                reviews.forEach(review => {
                    const row = headers.map(header => {
                        let value = review[header] || '';
                        
                        // –≠–∫—Ä–∞–Ω–∏—Ä—É–µ–º –∫–∞–≤—ã—á–∫–∏ –∏ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫
                        if (typeof value === 'string') {
                            value = value.replace(/"/g, '""');
                            if (value.includes(',') || value.includes('\n') || value.includes('"')) {
                                value = '"' + value + '"';
                            }
                        }
                        
                        return value;
                    });
                    
                    csv += row.join(',') + '\n';
                });

                document.getElementById('csvOutput').value = csv;
                alert(`‚úÖ –£—Å–ø–µ—à–Ω–æ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ ${reviews.length} –æ—Ç–∑—ã–≤–æ–≤!`);
                
            } catch (error) {
                alert('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ JSON: ' + error.message);
            }
        }

        function copyCSV() {
            const csv = document.getElementById('csvOutput').value;
            if (!csv) {
                alert('–°–Ω–∞—á–∞–ª–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–π—Ç–µ JSON –≤ CSV');
                return;
            }
            
            navigator.clipboard.writeText(csv).then(() => {
                alert('CSV —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!');
            });
        }

        function downloadCSV() {
            const csv = document.getElementById('csvOutput').value;
            if (!csv) {
                alert('–°–Ω–∞—á–∞–ª–∞ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–π—Ç–µ JSON –≤ CSV');
                return;
            }

            const blob = new Blob([csv], { type: 'text/csv;charset=utf-8;' });
            const link = document.createElement('a');
            const url = URL.createObjectURL(blob);
            link.setAttribute('href', url);
            link.setAttribute('download', 'loox_reviews_import.csv');
            link.style.visibility = 'hidden';
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        }

        // –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        window.addEventListener('load', () => {
            const exampleJSON = `[
  {
    "product_handle": "custom-mug",
    "rating": 5,
    "author": "Annette Springer",
    "email": "",
    "body": "Very pleased with this purchase, which will make an impressive gift for a friend. I received an email proof for approval within half an hour of placing my order and the finished article arrived 4 days later.",
    "created_at": "2024-12-01",
    "photo_url": "https://cdn.shopify.com/s/files/1/YOUR_SHOP_ID/files/43519729303816.jpg",
    "verified_purchase": "true"
  }
]`;
            
            // –ù–µ –∑–∞–ø–æ–ª–Ω—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, —á—Ç–æ–±—ã –Ω–µ –º–µ—à–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        });
    </script>
</body>
</html>

{% assign review_ratings_string = '' %}
{% assign unique_review_texts = '' %}

{% for product in collections.all.products %}
  {% for review in product.metafields.custom.reviews.value %}

    <script>console.log({{ review | json }})</script>

    {% if review_ratings_string == '' %}
      {% assign review_ratings_string = review.rating %}
    {% else %}
      {% assign review_ratings_string = review_ratings_string | append: ',' | append: review.rating %}
    {% endif %}
  {% endfor %}
{% endfor %}

{% assign review_ratings = review_ratings_string | split: ',' %}

<div class="container">
  <div class="reviews">
    {% if section.settings.title != blank %}
      <h2>{{ section.settings.title }}</h2>
    {% endif %}

    <div class="reviews__wrap">
      {% for block in section.blocks %}
        {% case block.type %}
          {% when 'rating' %}
            <div class="reviews__stats">
              {% assign total_reviews = review_ratings.size %}

              {% assign total_rating_sum = 0 %}
              {% assign excellent_count = 0 %}
              {% assign great_count = 0 %}
              {% assign good_count = 0 %}
              {% assign average_count = 0 %}
              {% assign bad_count = 0 %}

              {% for rating in review_ratings %}
                {% assign rating_value = rating | plus: 0 %}
                {% assign total_rating_sum = total_rating_sum | plus: rating_value %}

                {% if rating_value >= 4.5 %}
                  {% assign excellent_count = excellent_count | plus: 1 %}
                {% elsif rating_value >= 3.5 %}
                  {% assign great_count = great_count | plus: 1 %}
                {% elsif rating_value >= 2.5 %}
                  {% assign good_count = good_count | plus: 1 %}
                {% elsif rating_value >= 1.5 %}
                  {% assign average_count = average_count | plus: 1 %}
                {% else %}
                  {% assign bad_count = bad_count | plus: 1 %}
                {% endif %}
              {% endfor %}

              {% assign average_rating = total_rating_sum | times: 1.0 | divided_by: total_reviews %}

              {% assign excellent_percent = excellent_count | times: 100 | divided_by: total_reviews %}
              {% assign great_percent = great_count | times: 100 | divided_by: total_reviews %}
              {% assign good_percent = good_count | times: 100 | divided_by: total_reviews %}
              {% assign average_percent = average_count | times: 100 | divided_by: total_reviews %}
              {% assign bad_percent = bad_count | times: 100 | divided_by: total_reviews %}

              {% assign total_percent = excellent_percent
                | plus: great_percent
                | plus: good_percent
                | plus: average_percent
                | plus: bad_percent
              %}
              {% assign correction = 100 | minus: total_percent %}

              {% assign excellent_percent = excellent_percent | plus: correction %}

              {% assign highest_count = 0 %}
              {% if excellent_count > highest_count %}
                {% assign highest_count = excellent_count %}
                {% assign rating_text = 'general.rating.excellent' | t %}
              {% endif %}

              {% if great_count > highest_count %}
                {% assign highest_count = great_count %}
                {% assign rating_text = 'general.rating.great' | t %}
              {% endif %}

              {% if good_count > highest_count %}
                {% assign highest_count = good_count %}
                {% assign rating_text = 'general.rating.good' | t %}
              {% endif %}

              {% if average_count > highest_count %}
                {% assign highest_count = average_count %}
                {% assign rating_text = 'general.rating.average' | t %}
              {% endif %}

              {% if bad_count > highest_count %}
                {% assign highest_count = bad_count %}
                {% assign rating_text = 'general.rating.bad' | t %}
              {% endif %}

              <h3>{{ rating_text }}</h3>
              <div class="reviews__summary">
                <div class="reviews__rating">
                  {% for i in (1..5) %}
                    <!--
                      <div class="mark">
                        <span class="filled"></span>
                      </div>
                    -->

                    <div class="reviews__summary-star">
                      <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M13.635 15.75L12.4088 10.4782L16.5 6.933L11.1068 6.47025L9 1.5L6.89325 6.47025L1.5 6.933L5.59125 10.4782L4.365 15.75L9 12.954L13.635 15.75Z" fill="#146F60"></path>
                      </svg>
                    </div>
                  {% endfor %}
                </div>
                <span class="count">{{ average_rating | round: 1 }}</span>
              </div>
              <span class="total">{{ 'general.rating.total_reviews' | t: count: total_reviews }}</span>
              <ul class="reviews__grade">
                {% assign excellent_stars = excellent_percent | divided_by: 20.0 | ceil %}
                <li class="excellent">
                  <div>
                    <b>{{ 'general.rating.excellent' | t }}</b>
                  </div>
                  <span class="stars">
                    {% for i in (1..5) %}
                      <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M13.635 15.75L12.4088 10.4782L16.5 6.933L11.1068 6.47025L9 1.5L6.89325 6.47025L1.5 6.933L5.59125 10.4782L4.365 15.75L9 12.954L13.635 15.75Z" fill="#146F60"></path>
                      </svg>
                    {% endfor %}
                  </span>
                  <span class="percent">{{ excellent_percent | round: 0 }}%</span>
                </li>

                {% assign great_stars = great_percent | divided_by: 20.0 | ceil %}
                <li class="excellent">
                  <div>
                    <b>{{ 'general.rating.great' | t }}</b>
                  </div>
                  <span class="stars">
                    {% for i in (1..4) %}
                      <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M13.635 15.75L12.4088 10.4782L16.5 6.933L11.1068 6.47025L9 1.5L6.89325 6.47025L1.5 6.933L5.59125 10.4782L4.365 15.75L9 12.954L13.635 15.75Z" fill="#146F60"></path>
                      </svg>
                    {% endfor %}
                  </span>
                  <span class="percent">{{ great_percent | round: 0 }}%</span>
                </li>

                {% assign good_stars = good_percent | divided_by: 20.0 | ceil %}
                <li class="good">
                  <div>
                    <b>{{ 'general.rating.good' | t }}</b>
                  </div>
                  <span class="stars">
                    {% for i in (1..3) %}
                      <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M13.635 15.75L12.4088 10.4782L16.5 6.933L11.1068 6.47025L9 1.5L6.89325 6.47025L1.5 6.933L5.59125 10.4782L4.365 15.75L9 12.954L13.635 15.75Z" fill="#146F60"></path>
                      </svg>
                    {% endfor %}
                  </span>
                  <span class="percent">{{ good_percent | round: 0 }}%</span>
                </li>

                {% assign average_stars = average_percent | divided_by: 20.0 | ceil %}
                <li class="good">
                  <div>
                    <b>{{ 'general.rating.average' | t }}</b>
                  </div>
                  <span class="stars">
                    {% for i in (1..2) %}
                      <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M13.635 15.75L12.4088 10.4782L16.5 6.933L11.1068 6.47025L9 1.5L6.89325 6.47025L1.5 6.933L5.59125 10.4782L4.365 15.75L9 12.954L13.635 15.75Z" fill="#146F60"></path>
                      </svg>
                    {% endfor %}
                  </span>
                  <span class="percent">{{ average_percent | round: 0 }}%</span>
                </li>

                {% assign bad_stars = bad_percent | divided_by: 20.0 | ceil %}
                <li class="bad">
                  <div>
                    <b>{{ 'general.rating.bad' | t }}</b>
                  </div>
                  <span class="stars">
                    {% for i in (1..1) %}
                      <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M13.635 15.75L12.4088 10.4782L16.5 6.933L11.1068 6.47025L9 1.5L6.89325 6.47025L1.5 6.933L5.59125 10.4782L4.365 15.75L9 12.954L13.635 15.75Z" fill="#146F60"></path>
                      </svg>
                    {% endfor %}
                  </span>
                  <span class="percent">{{ bad_percent | round: 0 }}%</span>
                </li>
              </ul>
            </div>
          {% when 'reviews' %}
            <div class="reviews__content">
              <!-- Filter and sort -->
              <div class="filters">
                <div class="filters__button-wrapper">
                  <div class="filters__button">
                    <button class="button filters__button-value button--white">
                      Filter
                      <svg
                        width="9"
                        height="12"
                        viewBox="0 0 9 12"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                            d="M8.00776 7.18388C7.87867 7.18505 7.7537 7.22941 7.65276 7.30988L4.42276 9.80688L1.19676 7.30988C1.09581 7.22941 0.970841 7.18505 0.841757 7.18388C0.596757 7.18388 0.369757 7.35187 0.248757 7.62087C0.160611 7.82207 0.136521 8.04552 0.179757 8.26087C0.223757 8.48387 0.332757 8.67088 0.486757 8.79088L4.06976 11.5599C4.17576 11.6419 4.29976 11.6859 4.42376 11.6859C4.55284 11.6847 4.67781 11.6403 4.77876 11.5599L8.36276 8.78988C8.52509 8.65611 8.63374 8.46829 8.66876 8.26087C8.71186 8.04551 8.68778 7.8221 8.59976 7.62087C8.47976 7.35087 8.25176 7.18388 8.00776 7.18388ZM0.840757 4.54988C0.969497 4.54847 1.09408 4.50413 1.19476 4.42387L4.42476 1.92787L7.65276 4.42287C7.75976 4.50588 7.88276 4.54887 8.00776 4.54887C8.25176 4.54887 8.47876 4.38188 8.59976 4.11188C8.68824 3.91079 8.71268 3.68734 8.66976 3.47187C8.63448 3.26432 8.52546 3.07648 8.36276 2.94288L4.77976 0.172875C4.67878 0.0924792 4.55383 0.048131 4.42476 0.046875C4.29567 0.0480543 4.1707 0.092411 4.06976 0.172875L0.485757 2.94388C0.322774 3.07767 0.213724 3.26593 0.178757 3.47388C0.135757 3.69088 0.160757 3.91887 0.248757 4.11387C0.368757 4.38387 0.595757 4.54988 0.840757 4.54988Z"
                            fill="black" />
                      </svg>
                    </button>

                    <div class="filters__button-variants">
                      <div class="rating-picker">
                        <button data-reviews-rating="5" class="rating-picker__item green">
                          <span class="checkmark"></span>
                          <span class="rating-bar">
                            <span class="filled"></span><span class="filled"></span><span class="filled"></span
                            ><span class="filled"></span><span class="filled"></span>
                          </span>
                          <span class="rating-label">{{ 'general.rating.excellent' | t }}</span>
                        </button>
                        <button data-reviews-rating="4" class="rating-picker__item green">
                          <span class="checkmark"></span>
                          <span class="rating-bar">
                            <span class="filled"></span><span class="filled"></span><span class="filled"></span
                            ><span class="filled"></span><span class="empty"></span>
                          </span>
                          <span class="rating-label">{{ 'general.rating.great' | t }}</span>
                        </button>
                        <button data-reviews-rating="3" class="rating-picker__item green">
                          <span class="checkmark"></span>
                          <span class="rating-bar">
                            <span class="filled"></span><span class="filled"></span><span class="filled"></span
                            ><span class="empty"></span><span class="empty"></span>
                          </span>
                          <span class="rating-label">{{ 'general.rating.good' | t }}</span>
                        </button>
                        <button data-reviews-rating="2" class="rating-picker__item green">
                          <span class="checkmark"></span>
                          <span class="rating-bar">
                            <span class="filled"></span><span class="filled"></span><span class="empty"></span
                            ><span class="empty"></span><span class="empty"></span>
                          </span>
                          <span class="rating-label">{{ 'general.rating.average' | t }}</span>
                        </button>
                        <button data-reviews-rating="1" class="rating-picker__item green">
                          <span class="checkmark"></span>
                          <span class="rating-bar">
                            <span class="filled"></span><span class="empty"></span><span class="empty"></span
                            ><span class="empty"></span><span class="empty"></span>
                          </span>
                          <span class="rating-label">{{ 'general.rating.bad' | t }}</span>
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="filters__button-wrapper">
                  Sort by
                  <div class="filters__button">
                    <button class="button filters__button-value button--white">
                      Newest first
                      <svg
                        width="9"
                        height="12"
                        viewBox="0 0 9 12"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                            d="M8.00776 7.18388C7.87867 7.18505 7.7537 7.22941 7.65276 7.30988L4.42276 9.80688L1.19676 7.30988C1.09581 7.22941 0.970841 7.18505 0.841757 7.18388C0.596757 7.18388 0.369757 7.35187 0.248757 7.62087C0.160611 7.82207 0.136521 8.04552 0.179757 8.26087C0.223757 8.48387 0.332757 8.67088 0.486757 8.79088L4.06976 11.5599C4.17576 11.6419 4.29976 11.6859 4.42376 11.6859C4.55284 11.6847 4.67781 11.6403 4.77876 11.5599L8.36276 8.78988C8.52509 8.65611 8.63374 8.46829 8.66876 8.26087C8.71186 8.04551 8.68778 7.8221 8.59976 7.62087C8.47976 7.35087 8.25176 7.18388 8.00776 7.18388ZM0.840757 4.54988C0.969497 4.54847 1.09408 4.50413 1.19476 4.42387L4.42476 1.92787L7.65276 4.42287C7.75976 4.50588 7.88276 4.54887 8.00776 4.54887C8.25176 4.54887 8.47876 4.38188 8.59976 4.11188C8.68824 3.91079 8.71268 3.68734 8.66976 3.47187C8.63448 3.26432 8.52546 3.07648 8.36276 2.94288L4.77976 0.172875C4.67878 0.0924792 4.55383 0.048131 4.42476 0.046875C4.29567 0.0480543 4.1707 0.092411 4.06976 0.172875L0.485757 2.94388C0.322774 3.07767 0.213724 3.26593 0.178757 3.47388C0.135757 3.69088 0.160757 3.91887 0.248757 4.11387C0.368757 4.38387 0.595757 4.54988 0.840757 4.54988Z"
                            fill="black" />
                      </svg>
                    </button>

                    <div class="filters__button-variants">
                      <button data-filter="newest" data-selected-text="Newest first" class="button">
                        {{ 'general.rating.newest' | t }}
                      </button>
                      <button data-filter="featured" data-selected-text="Featured first" class="button">
                        {{ 'general.rating.featured' | t }}
                      </button>
                    </div>
                  </div>
                </div>
              </div>
              <div class="filters"></div>

              <ul data-reviews-per-page="{{ block.settings.reviews_per_page }}" class="reviews__list">
                {% for product in collections.all.products %}
                  {% for review in product.metafields.custom.reviews.value %}
                    {% assign review_index = forloop.index | minus: 1 %}

                    {% assign review_author = review.author %}
                    {% assign review_date = review.date %}
                    {% assign review_title = review.title %}
                    {% assign review_rating = review.rating %}
                    {% assign review_text = review.text %}
                    {% assign review_image = review.product_image %}
                    {% assign review_country = review.country %}

                    {% comment %} –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞ {% endcomment %}
                    {% assign text_already_exists = false %}
                    {% unless review_text == blank %}
                      {% assign text_separator = '|||' %}
                      {% assign text_to_check = text_separator | append: review_text | append: text_separator %}
                      {% if unique_review_texts contains text_to_check %}
                        {% assign text_already_exists = true %}
                      {% else %}
                        {% assign unique_review_texts = unique_review_texts | append: text_to_check %}
                      {% endif %}
                    {% endunless %}

                    {% comment %} –í—ã–≤–æ–¥–∏–º –æ—Ç–∑—ã–≤ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π {% endcomment %}
                    {% unless text_already_exists %}
                      <li data-rating="{{ review_rating }}" class="review__card">
                        <div class="reviews__product">
                          <a href="{{ product.url }}" class="reviews__link">
                            {% if review_image != blank %}
                              {{ review_image | image_url: width: review_image.width | image_tag }}
                            {% endif %}

                            <h5>{{ product.title }}</h5>
                          </a>
                        </div>
                        <div class="reviews__info">
                          <span class="author">
                            {{- review_author }}
                            <br>
                            {{ review_country -}}
                          </span>
                          <span class="date">{{ review_date | date: '%-d %B %Y' }}</span>

                          {% if review_rating != blank %}
                            {%- render 'rating', stars_number: review_rating, use_small_text: true -%}
                          {% endif %}

                          {% if review_title != blank %}
                            <h4>{{ review_title }}</h4>
                          {% endif %}

                          <p class="review__text">
                            {{ review_text }}
                          </p>
                          <div class="reviews__images">
                            {% for image in review.images.value %}
                              {{ image | image_url: width: image.width | image_tag: fetchpriority: fetch_priority }}
                            {% endfor %}
                          </div>
                        </div>
                      </li>
                    {% endunless %}
                  {% endfor %}
                {% endfor %}
              </ul>

              <!-- Pagination -->
              <div class="reviews__pagination pagination">
                <ul class="pagination__list"></ul>
              </div>
            </div>
        {% endcase %}
      {% endfor %}
    </div>
  </div>
</div>

<div class="modal" id="image-modal">
  <span class="modal__close">&times;</span>
  <img class="modal__content" id="modal-img">
</div>

{% schema %}
{
  "name": "Reviews",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Hear from our happy travelers"
    },
  ],
  "blocks": [
    {
      "type": "rating",
      "name": "Rating"
    },
    {
      "type": "reviews",
      "name": "Reviews",
      "settings": [
        {
          "type": "range",
          "min": 1,
          "max": 15,
          "id": "reviews_per_page",
          "label": "Reviews per page",
          "default": 5
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Reviews",
      "blocks": [
        {
          "type": "rating"
        },
        {
          "type": "reviews"
        }
      ]
    }
  ]
}
{% endschema %}
