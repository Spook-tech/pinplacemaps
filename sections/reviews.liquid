<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Loox CSV Generator</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            background: #f5f5f5;
        }
        .container {
            background: white;
            padding: 30px;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }
        h1 {
            color: #2c3e50;
            text-align: center;
            margin-bottom: 30px;
        }
        .input-section {
            margin-bottom: 30px;
        }
        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #34495e;
        }
        textarea {
            width: 100%;
            min-height: 200px;
            padding: 15px;
            border: 2px solid #e0e0e0;
            border-radius: 8px;
            font-family: 'Courier New', monospace;
            font-size: 14px;
            resize: vertical;
        }
        textarea:focus {
            outline: none;
            border-color: #3498db;
        }
        .buttons {
            display: flex;
            gap: 15px;
            justify-content: center;
            flex-wrap: wrap;
        }
        button {
            padding: 12px 30px;
            font-size: 16px;
            font-weight: 600;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        .btn-primary {
            background: #3498db;
            color: white;
        }
        .btn-primary:hover {
            background: #2980b9;
            transform: translateY(-2px);
        }
        .btn-success {
            background: #27ae60;
            color: white;
        }
        .btn-success:hover {
            background: #229954;
            transform: translateY(-2px);
        }
        .btn-secondary {
            background: #95a5a6;
            color: white;
        }
        .btn-secondary:hover {
            background: #7f8c8d;
        }
        .preview {
            margin-top: 30px;
            padding: 20px;
            background: #f8f9fa;
            border-radius: 8px;
            border-left: 4px solid #3498db;
        }
        .stats {
            display: flex;
            gap: 20px;
            margin-bottom: 20px;
            flex-wrap: wrap;
        }
        .stat {
            background: white;
            padding: 15px;
            border-radius: 6px;
            text-align: center;
            min-width: 120px;
        }
        .stat-number {
            font-size: 24px;
            font-weight: bold;
            color: #2c3e50;
        }
        .stat-label {
            font-size: 12px;
            color: #7f8c8d;
            text-transform: uppercase;
        }
        pre {
            background: #2c3e50;
            color: #ecf0f1;
            padding: 15px;
            border-radius: 6px;
            overflow-x: auto;
            font-size: 12px;
            max-height: 300px;
        }
        .example {
            margin-top: 20px;
            padding: 15px;
            background: #fff3cd;
            border: 1px solid #ffeaa7;
            border-radius: 6px;
        }
        .example h3 {
            margin-top: 0;
            color: #856404;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä –æ—Ç–∑—ã–≤–æ–≤ Shopify ‚Üí Loox CSV</h1>
        
        <div class="input-section">
            <label for="reviewsData">–í—Å—Ç–∞–≤—å—Ç–µ JSON –¥–∞–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤–æ–≤:</label>
            <textarea id="reviewsData" placeholder='–í—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:
[
  {
    "product_handle": "t-shirt",
    "author": "Rafal Odon",
    "country": "Poland üáµüá±",
    "date": "2024-10-30",
    "images": ["gid://shopify/MediaImage/43519729303816"],
    "product_image": "gid://shopify/MediaImage/43756824756488",
    "rating": 5,
    "text": "Absolutely perfect, quick responses, and speedy delivery.",
    "title": "Excellent",
    "email": "customer@example.com"
  }
]'></textarea>
        </div>

        <div class="buttons">
            <button class="btn-primary" onclick="generateCSV()">üìä –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å CSV</button>
            <button class="btn-success" onclick="downloadCSV()" id="downloadBtn" style="display:none;">‚¨áÔ∏è –°–∫–∞—á–∞—Ç—å CSV —Ñ–∞–π–ª</button>
            <button class="btn-secondary" onclick="loadExample()">üìù –ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–∏–º–µ—Ä</button>
        </div>

        <div id="preview" class="preview" style="display:none;">
            <h3>üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä</h3>
            <div class="stats" id="stats"></div>
            <h4>–ü–µ—Ä–≤—ã–µ 3 —Å—Ç—Ä–æ–∫–∏ CSV:</h4>
            <pre id="csvPreview"></pre>
        </div>

        <div class="example">
            <h3>üí° –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</h3>
            <ol>
                <li><strong>–ü–æ–ª—É—á–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Shopify:</strong> –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Liquid –∫–æ–¥ –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –æ—Ç–∑—ã–≤–æ–≤</li>
                <li><strong>–í—Å—Ç–∞–≤—å—Ç–µ JSON:</strong> –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤–æ–≤ –≤ –ø–æ–ª–µ –≤—ã—à–µ</li>
                <li><strong>–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ CSV:</strong> –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å CSV"</li>
                <li><strong>–°–∫–∞—á–∞–π—Ç–µ —Ñ–∞–π–ª:</strong> –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É "–°–∫–∞—á–∞—Ç—å CSV —Ñ–∞–π–ª"</li>
                <li><strong>–ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –≤ Loox:</strong> –ó–∞–≥—Ä—É–∑–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤ Loox</li>
            </ol>
        </div>
    </div>

    <script>
        let csvData = '';

        function loadExample() {
            const exampleData = [
                {
                    "product_handle": "t-shirt",
                    "author": "Rafal Odon",
                    "country": "Poland üáµüá±", 
                    "date": "2024-10-30",
                    "images": ["gid://shopify/MediaImage/43519729303816"],
                    "product_image": "gid://shopify/MediaImage/43756824756488",
                    "rating": 5,
                    "text": "Absolutely perfect, quick responses, and speedy delivery. Packaged well, no chance of damage. Couldn't ask for a better service",
                    "title": "Excellent",
                    "email": "rafal@example.com"
                },
                {
                    "product_handle": "hoodie",
                    "author": "Alex D.",
                    "country": "USA üá∫üá∏",
                    "date": "2022-01-15", 
                    "images": [],
                    "rating": 5,
                    "text": "This is the best blue hoodie I've ever seen",
                    "title": "Amazing quality",
                    "email": "alex@mail.com"
                }
            ];
            
            document.getElementById('reviewsData').value = JSON.stringify(exampleData, null, 2);
        }

        function generateCSV() {
            const input = document.getElementById('reviewsData').value.trim();
            
            if (!input) {
                alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –æ—Ç–∑—ã–≤–æ–≤');
                return;
            }

            try {
                const reviews = JSON.parse(input);
                
                if (!Array.isArray(reviews)) {
                    throw new Error('–î–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –º–∞—Å—Å–∏–≤–æ–º');
                }

                // CSV –∑–∞–≥–æ–ª–æ–≤–∫–∏
                const headers = ['product_handle', 'rating', 'author', 'email', 'body', 'created_at', 'photo_url', 'verified_purchase'];
                
                // –°–æ–∑–¥–∞–µ–º CSV —Å—Ç—Ä–æ–∫–∏
                const csvRows = [headers.join(',')];
                
                reviews.forEach(review => {
                    const row = [
                        escapeCsvField(review.product_handle || ''),
                        review.rating || '',
                        escapeCsvField(review.author || ''),
                        escapeCsvField(review.email || ''),
                        escapeCsvField(review.text || review.body || ''),
                        review.date || review.created_at || '',
                        getImageUrl(review.images),
                        'TRUE'
                    ];
                    csvRows.push(row.join(','));
                });

                csvData = csvRows.join('\n');
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä
                showPreview(reviews, csvRows);
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                document.getElementById('downloadBtn').style.display = 'inline-block';
                
            } catch (error) {
                alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö: ' + error.message + '\n\n–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–æ—Ä–º–∞—Ç JSON');
            }
        }

        function escapeCsvField(field) {
            if (field === null || field === undefined) return '';
            
            const str = String(field);
            
            // –ï—Å–ª–∏ –ø–æ–ª–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–ø—è—Ç—ã–µ, –∫–∞–≤—ã—á–∫–∏ –∏–ª–∏ –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫, –∑–∞–∫–ª—é—á–∞–µ–º –≤ –∫–∞–≤—ã—á–∫–∏
            if (str.includes(',') || str.includes('"') || str.includes('\n') || str.includes('\r')) {
                return '"' + str.replace(/"/g, '""') + '"';
            }
            
            return str;
        }

        function getImageUrl(images) {
            if (!images || !Array.isArray(images) || images.length === 0) {
                return '';
            }
            
            // –î–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∑–∞–≥–ª—É—à–∫—É
            // –í —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å Shopify Media ID –≤ URL
            const mediaId = images[0];
            if (mediaId && mediaId.includes('MediaImage')) {
                return 'https://cdn.shopify.com/s/files/1/example.jpg';
            }
            
            return images[0] || '';
        }

        function showPreview(reviews, csvRows) {
            const preview = document.getElementById('preview');
            const stats = document.getElementById('stats');
            const csvPreview = document.getElementById('csvPreview');
            
            // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
            const totalReviews = reviews.length;
            const avgRating = reviews.reduce((sum, r) => sum + (r.rating || 0), 0) / totalReviews;
            const withImages = reviews.filter(r => r.images && r.images.length > 0).length;
            const withEmails = reviews.filter(r => r.email).length;
            
            stats.innerHTML = `
                <div class="stat">
                    <div class="stat-number">${totalReviews}</div>
                    <div class="stat-label">–í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤</div>
                </div>
                <div class="stat">
                    <div class="stat-number">${avgRating.toFixed(1)}</div>
                    <div class="stat-label">–°—Ä–µ–¥–Ω–∏–π —Ä–µ–π—Ç–∏–Ω–≥</div>
                </div>
                <div class="stat">
                    <div class="stat-number">${withImages}</div>
                    <div class="stat-label">–° –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏</div>
                </div>
                <div class="stat">
                    <div class="stat-number">${withEmails}</div>
                    <div class="stat-label">–° email</div>
                </div>
            `;
            
            // –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä CSV (–ø–µ—Ä–≤—ã–µ 4 —Å—Ç—Ä–æ–∫–∏)
            const previewRows = csvRows.slice(0, 4);
            csvPreview.textContent = previewRows.join('\n');
            
            preview.style.display = 'block';
        }

        function downloadCSV() {
            if (!csvData) {
                alert('–°–Ω–∞—á–∞–ª–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ CSV');
                return;
            }

            const blob = new Blob([csvData], { type: 'text/csv;charset=utf-8;' });
            const link = document.createElement('a');
            
            if (link.download !== undefined) {
                const url = URL.createObjectURL(blob);
                link.setAttribute('href', url);
                link.setAttribute('download', `loox_reviews_${new Date().toISOString().split('T')[0]}.csv`);
                link.style.visibility = 'hidden';
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            }
        }
    </script>
</body>
</html>

{% comment %}
–°–æ–∑–¥–∞–µ–º –º–∞—Å—Å–∏–≤ –æ—Ç–∑—ã–≤–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
{% endcomment %}

{% assign reviews_array = '' %}
{% assign first_review = true %}

{% for product in collections.all.products %}
  {% for review in product.metafields.custom.reviews.value %}
    {% if first_review %}
      {% assign first_review = false %}
    {% else %}
      {% assign reviews_array = reviews_array | append: ',' %}
    {% endif %}
    
    {% comment %}–°–æ–∑–¥–∞–µ–º JSON –æ–±—ä–µ–∫—Ç –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ—Ç–∑—ã–≤–∞{% endcomment %}
    {% capture review_json %}
    {
      "product_id": "{{ product.id }}",
      "product_title": "{{ product.title | escape }}",
      "rating": {{ review.rating }},
      "review_text": '{{ review.text }}',
      "author": "{{ review.author | escape }}",
      "date": "{{ review.date }}"
    }
    {% endcapture %}
    
    {% assign reviews_array = reviews_array | append: review_json %}
  {% endfor %}
{% endfor %}

{% comment %}–í—ã–≤–æ–¥–∏–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π JSON –º–∞—Å—Å–∏–≤{% endcomment %}
<script>
  const reviewsData = [{{ reviews_array }}];
  console.log('Reviews Array:', reviewsData);
</script>

{% comment %}–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç - JSON –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π Liquid{% endcomment %}
{% assign reviews_json = '[' | append: reviews_array | append: ']' %}

{% comment %}–î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ JavaScript{% endcomment %}
<script>
  window.reviewsJSON = {{ reviews_json }};
</script>

{% assign review_ratings_string = '' %}
{% assign unique_review_texts = '' %}

{% for product in collections.all.products %}
  {% for review in product.metafields.custom.reviews.value %}
    {% if review_ratings_string == '' %}
      {% assign review_ratings_string = review.rating %}
    {% else %}
      {% assign review_ratings_string = review_ratings_string | append: ',' | append: review.rating %}
    {% endif %}
  {% endfor %}
{% endfor %}

{% assign review_ratings = review_ratings_string | split: ',' %}

<div class="container">
  <div class="reviews">
    {% if section.settings.title != blank %}
      <h2>{{ section.settings.title }}</h2>
    {% endif %}

    <div class="reviews__wrap">
      {% for block in section.blocks %}
        {% case block.type %}
          {% when 'rating' %}
            <div class="reviews__stats">
              {% assign total_reviews = review_ratings.size %}

              {% assign total_rating_sum = 0 %}
              {% assign excellent_count = 0 %}
              {% assign great_count = 0 %}
              {% assign good_count = 0 %}
              {% assign average_count = 0 %}
              {% assign bad_count = 0 %}

              {% for rating in review_ratings %}
                {% assign rating_value = rating | plus: 0 %}
                {% assign total_rating_sum = total_rating_sum | plus: rating_value %}

                {% if rating_value >= 4.5 %}
                  {% assign excellent_count = excellent_count | plus: 1 %}
                {% elsif rating_value >= 3.5 %}
                  {% assign great_count = great_count | plus: 1 %}
                {% elsif rating_value >= 2.5 %}
                  {% assign good_count = good_count | plus: 1 %}
                {% elsif rating_value >= 1.5 %}
                  {% assign average_count = average_count | plus: 1 %}
                {% else %}
                  {% assign bad_count = bad_count | plus: 1 %}
                {% endif %}
              {% endfor %}

              {% assign average_rating = total_rating_sum | times: 1.0 | divided_by: total_reviews %}

              {% assign excellent_percent = excellent_count | times: 100 | divided_by: total_reviews %}
              {% assign great_percent = great_count | times: 100 | divided_by: total_reviews %}
              {% assign good_percent = good_count | times: 100 | divided_by: total_reviews %}
              {% assign average_percent = average_count | times: 100 | divided_by: total_reviews %}
              {% assign bad_percent = bad_count | times: 100 | divided_by: total_reviews %}

              {% assign total_percent = excellent_percent
                | plus: great_percent
                | plus: good_percent
                | plus: average_percent
                | plus: bad_percent
              %}
              {% assign correction = 100 | minus: total_percent %}

              {% assign excellent_percent = excellent_percent | plus: correction %}

              {% assign highest_count = 0 %}
              {% if excellent_count > highest_count %}
                {% assign highest_count = excellent_count %}
                {% assign rating_text = 'general.rating.excellent' | t %}
              {% endif %}

              {% if great_count > highest_count %}
                {% assign highest_count = great_count %}
                {% assign rating_text = 'general.rating.great' | t %}
              {% endif %}

              {% if good_count > highest_count %}
                {% assign highest_count = good_count %}
                {% assign rating_text = 'general.rating.good' | t %}
              {% endif %}

              {% if average_count > highest_count %}
                {% assign highest_count = average_count %}
                {% assign rating_text = 'general.rating.average' | t %}
              {% endif %}

              {% if bad_count > highest_count %}
                {% assign highest_count = bad_count %}
                {% assign rating_text = 'general.rating.bad' | t %}
              {% endif %}

              <h3>{{ rating_text }}</h3>
              <div class="reviews__summary">
                <div class="reviews__rating">
                  {% for i in (1..5) %}
                    <!--
                      <div class="mark">
                        <span class="filled"></span>
                      </div>
                    -->

                    <div class="reviews__summary-star">
                      <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M13.635 15.75L12.4088 10.4782L16.5 6.933L11.1068 6.47025L9 1.5L6.89325 6.47025L1.5 6.933L5.59125 10.4782L4.365 15.75L9 12.954L13.635 15.75Z" fill="#146F60"></path>
                      </svg>
                    </div>
                  {% endfor %}
                </div>
                <span class="count">{{ average_rating | round: 1 }}</span>
              </div>
              <span class="total">{{ 'general.rating.total_reviews' | t: count: total_reviews }}</span>
              <ul class="reviews__grade">
                {% assign excellent_stars = excellent_percent | divided_by: 20.0 | ceil %}
                <li class="excellent">
                  <div>
                    <b>{{ 'general.rating.excellent' | t }}</b>
                  </div>
                  <span class="stars">
                    {% for i in (1..5) %}
                      <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M13.635 15.75L12.4088 10.4782L16.5 6.933L11.1068 6.47025L9 1.5L6.89325 6.47025L1.5 6.933L5.59125 10.4782L4.365 15.75L9 12.954L13.635 15.75Z" fill="#146F60"></path>
                      </svg>
                    {% endfor %}
                  </span>
                  <span class="percent">{{ excellent_percent | round: 0 }}%</span>
                </li>

                {% assign great_stars = great_percent | divided_by: 20.0 | ceil %}
                <li class="excellent">
                  <div>
                    <b>{{ 'general.rating.great' | t }}</b>
                  </div>
                  <span class="stars">
                    {% for i in (1..4) %}
                      <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M13.635 15.75L12.4088 10.4782L16.5 6.933L11.1068 6.47025L9 1.5L6.89325 6.47025L1.5 6.933L5.59125 10.4782L4.365 15.75L9 12.954L13.635 15.75Z" fill="#146F60"></path>
                      </svg>
                    {% endfor %}
                  </span>
                  <span class="percent">{{ great_percent | round: 0 }}%</span>
                </li>

                {% assign good_stars = good_percent | divided_by: 20.0 | ceil %}
                <li class="good">
                  <div>
                    <b>{{ 'general.rating.good' | t }}</b>
                  </div>
                  <span class="stars">
                    {% for i in (1..3) %}
                      <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M13.635 15.75L12.4088 10.4782L16.5 6.933L11.1068 6.47025L9 1.5L6.89325 6.47025L1.5 6.933L5.59125 10.4782L4.365 15.75L9 12.954L13.635 15.75Z" fill="#146F60"></path>
                      </svg>
                    {% endfor %}
                  </span>
                  <span class="percent">{{ good_percent | round: 0 }}%</span>
                </li>

                {% assign average_stars = average_percent | divided_by: 20.0 | ceil %}
                <li class="good">
                  <div>
                    <b>{{ 'general.rating.average' | t }}</b>
                  </div>
                  <span class="stars">
                    {% for i in (1..2) %}
                      <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M13.635 15.75L12.4088 10.4782L16.5 6.933L11.1068 6.47025L9 1.5L6.89325 6.47025L1.5 6.933L5.59125 10.4782L4.365 15.75L9 12.954L13.635 15.75Z" fill="#146F60"></path>
                      </svg>
                    {% endfor %}
                  </span>
                  <span class="percent">{{ average_percent | round: 0 }}%</span>
                </li>

                {% assign bad_stars = bad_percent | divided_by: 20.0 | ceil %}
                <li class="bad">
                  <div>
                    <b>{{ 'general.rating.bad' | t }}</b>
                  </div>
                  <span class="stars">
                    {% for i in (1..1) %}
                      <svg width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M13.635 15.75L12.4088 10.4782L16.5 6.933L11.1068 6.47025L9 1.5L6.89325 6.47025L1.5 6.933L5.59125 10.4782L4.365 15.75L9 12.954L13.635 15.75Z" fill="#146F60"></path>
                      </svg>
                    {% endfor %}
                  </span>
                  <span class="percent">{{ bad_percent | round: 0 }}%</span>
                </li>
              </ul>
            </div>
          {% when 'reviews' %}
            <div class="reviews__content">
              <!-- Filter and sort -->
              <div class="filters">
                <div class="filters__button-wrapper">
                  <div class="filters__button">
                    <button class="button filters__button-value button--white">
                      Filter
                      <svg
                        width="9"
                        height="12"
                        viewBox="0 0 9 12"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                            d="M8.00776 7.18388C7.87867 7.18505 7.7537 7.22941 7.65276 7.30988L4.42276 9.80688L1.19676 7.30988C1.09581 7.22941 0.970841 7.18505 0.841757 7.18388C0.596757 7.18388 0.369757 7.35187 0.248757 7.62087C0.160611 7.82207 0.136521 8.04552 0.179757 8.26087C0.223757 8.48387 0.332757 8.67088 0.486757 8.79088L4.06976 11.5599C4.17576 11.6419 4.29976 11.6859 4.42376 11.6859C4.55284 11.6847 4.67781 11.6403 4.77876 11.5599L8.36276 8.78988C8.52509 8.65611 8.63374 8.46829 8.66876 8.26087C8.71186 8.04551 8.68778 7.8221 8.59976 7.62087C8.47976 7.35087 8.25176 7.18388 8.00776 7.18388ZM0.840757 4.54988C0.969497 4.54847 1.09408 4.50413 1.19476 4.42387L4.42476 1.92787L7.65276 4.42287C7.75976 4.50588 7.88276 4.54887 8.00776 4.54887C8.25176 4.54887 8.47876 4.38188 8.59976 4.11188C8.68824 3.91079 8.71268 3.68734 8.66976 3.47187C8.63448 3.26432 8.52546 3.07648 8.36276 2.94288L4.77976 0.172875C4.67878 0.0924792 4.55383 0.048131 4.42476 0.046875C4.29567 0.0480543 4.1707 0.092411 4.06976 0.172875L0.485757 2.94388C0.322774 3.07767 0.213724 3.26593 0.178757 3.47388C0.135757 3.69088 0.160757 3.91887 0.248757 4.11387C0.368757 4.38387 0.595757 4.54988 0.840757 4.54988Z"
                            fill="black" />
                      </svg>
                    </button>

                    <div class="filters__button-variants">
                      <div class="rating-picker">
                        <button data-reviews-rating="5" class="rating-picker__item green">
                          <span class="checkmark"></span>
                          <span class="rating-bar">
                            <span class="filled"></span><span class="filled"></span><span class="filled"></span
                            ><span class="filled"></span><span class="filled"></span>
                          </span>
                          <span class="rating-label">{{ 'general.rating.excellent' | t }}</span>
                        </button>
                        <button data-reviews-rating="4" class="rating-picker__item green">
                          <span class="checkmark"></span>
                          <span class="rating-bar">
                            <span class="filled"></span><span class="filled"></span><span class="filled"></span
                            ><span class="filled"></span><span class="empty"></span>
                          </span>
                          <span class="rating-label">{{ 'general.rating.great' | t }}</span>
                        </button>
                        <button data-reviews-rating="3" class="rating-picker__item green">
                          <span class="checkmark"></span>
                          <span class="rating-bar">
                            <span class="filled"></span><span class="filled"></span><span class="filled"></span
                            ><span class="empty"></span><span class="empty"></span>
                          </span>
                          <span class="rating-label">{{ 'general.rating.good' | t }}</span>
                        </button>
                        <button data-reviews-rating="2" class="rating-picker__item green">
                          <span class="checkmark"></span>
                          <span class="rating-bar">
                            <span class="filled"></span><span class="filled"></span><span class="empty"></span
                            ><span class="empty"></span><span class="empty"></span>
                          </span>
                          <span class="rating-label">{{ 'general.rating.average' | t }}</span>
                        </button>
                        <button data-reviews-rating="1" class="rating-picker__item green">
                          <span class="checkmark"></span>
                          <span class="rating-bar">
                            <span class="filled"></span><span class="empty"></span><span class="empty"></span
                            ><span class="empty"></span><span class="empty"></span>
                          </span>
                          <span class="rating-label">{{ 'general.rating.bad' | t }}</span>
                        </button>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="filters__button-wrapper">
                  Sort by
                  <div class="filters__button">
                    <button class="button filters__button-value button--white">
                      Newest first
                      <svg
                        width="9"
                        height="12"
                        viewBox="0 0 9 12"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                            d="M8.00776 7.18388C7.87867 7.18505 7.7537 7.22941 7.65276 7.30988L4.42276 9.80688L1.19676 7.30988C1.09581 7.22941 0.970841 7.18505 0.841757 7.18388C0.596757 7.18388 0.369757 7.35187 0.248757 7.62087C0.160611 7.82207 0.136521 8.04552 0.179757 8.26087C0.223757 8.48387 0.332757 8.67088 0.486757 8.79088L4.06976 11.5599C4.17576 11.6419 4.29976 11.6859 4.42376 11.6859C4.55284 11.6847 4.67781 11.6403 4.77876 11.5599L8.36276 8.78988C8.52509 8.65611 8.63374 8.46829 8.66876 8.26087C8.71186 8.04551 8.68778 7.8221 8.59976 7.62087C8.47976 7.35087 8.25176 7.18388 8.00776 7.18388ZM0.840757 4.54988C0.969497 4.54847 1.09408 4.50413 1.19476 4.42387L4.42476 1.92787L7.65276 4.42287C7.75976 4.50588 7.88276 4.54887 8.00776 4.54887C8.25176 4.54887 8.47876 4.38188 8.59976 4.11188C8.68824 3.91079 8.71268 3.68734 8.66976 3.47187C8.63448 3.26432 8.52546 3.07648 8.36276 2.94288L4.77976 0.172875C4.67878 0.0924792 4.55383 0.048131 4.42476 0.046875C4.29567 0.0480543 4.1707 0.092411 4.06976 0.172875L0.485757 2.94388C0.322774 3.07767 0.213724 3.26593 0.178757 3.47388C0.135757 3.69088 0.160757 3.91887 0.248757 4.11387C0.368757 4.38387 0.595757 4.54988 0.840757 4.54988Z"
                            fill="black" />
                      </svg>
                    </button>

                    <div class="filters__button-variants">
                      <button data-filter="newest" data-selected-text="Newest first" class="button">
                        {{ 'general.rating.newest' | t }}
                      </button>
                      <button data-filter="featured" data-selected-text="Featured first" class="button">
                        {{ 'general.rating.featured' | t }}
                      </button>
                    </div>
                  </div>
                </div>
              </div>
              <div class="filters"></div>

              <ul data-reviews-per-page="{{ block.settings.reviews_per_page }}" class="reviews__list">
                {% for product in collections.all.products %}
                  {% for review in product.metafields.custom.reviews.value %}
                    {% assign review_index = forloop.index | minus: 1 %}

                    {% assign review_author = review.author %}
                    {% assign review_date = review.date %}
                    {% assign review_title = review.title %}
                    {% assign review_rating = review.rating %}
                    {% assign review_text = review.text %}
                    {% assign review_image = review.product_image %}
                    {% assign review_country = review.country %}

                    {% comment %} –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Ç–∞–∫–æ–π —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞ {% endcomment %}
                    {% assign text_already_exists = false %}
                    {% unless review_text == blank %}
                      {% assign text_separator = '|||' %}
                      {% assign text_to_check = text_separator | append: review_text | append: text_separator %}
                      {% if unique_review_texts contains text_to_check %}
                        {% assign text_already_exists = true %}
                      {% else %}
                        {% assign unique_review_texts = unique_review_texts | append: text_to_check %}
                      {% endif %}
                    {% endunless %}

                    {% comment %} –í—ã–≤–æ–¥–∏–º –æ—Ç–∑—ã–≤ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ç–µ–∫—Å—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–π {% endcomment %}
                    {% unless text_already_exists %}
                      <li data-rating="{{ review_rating }}" class="review__card">
                        <div class="reviews__product">
                          <a href="{{ product.url }}" class="reviews__link">
                            {% if review_image != blank %}
                              {{ review_image | image_url: width: review_image.width | image_tag }}
                            {% endif %}

                            <h5>{{ product.title }}</h5>
                          </a>
                        </div>
                        <div class="reviews__info">
                          <span class="author">
                            {{- review_author }}
                            <br>
                            {{ review_country -}}
                          </span>
                          <span class="date">{{ review_date | date: '%-d %B %Y' }}</span>

                          {% if review_rating != blank %}
                            {%- render 'rating', stars_number: review_rating, use_small_text: true -%}
                          {% endif %}

                          {% if review_title != blank %}
                            <h4>{{ review_title }}</h4>
                          {% endif %}

                          <p class="review__text">
                            {{ review_text }}
                          </p>
                          <div class="reviews__images">
                            {% for image in review.images.value %}
                              {{ image | image_url: width: image.width | image_tag: fetchpriority: fetch_priority }}
                            {% endfor %}
                          </div>
                        </div>
                      </li>
                    {% endunless %}
                  {% endfor %}
                {% endfor %}
              </ul>

              <!-- Pagination -->
              <div class="reviews__pagination pagination">
                <ul class="pagination__list"></ul>
              </div>
            </div>
        {% endcase %}
      {% endfor %}
    </div>
  </div>
</div>

<div class="modal" id="image-modal">
  <span class="modal__close">&times;</span>
  <img class="modal__content" id="modal-img">
</div>

{% schema %}
{
  "name": "Reviews",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Hear from our happy travelers"
    },
  ],
  "blocks": [
    {
      "type": "rating",
      "name": "Rating"
    },
    {
      "type": "reviews",
      "name": "Reviews",
      "settings": [
        {
          "type": "range",
          "min": 1,
          "max": 15,
          "id": "reviews_per_page",
          "label": "Reviews per page",
          "default": 5
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Reviews",
      "blocks": [
        {
          "type": "rating"
        },
        {
          "type": "reviews"
        }
      ]
    }
  ]
}
{% endschema %}
