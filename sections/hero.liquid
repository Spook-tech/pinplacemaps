<div x-data="{
  submitting: false,
  showAlert: false,
  alertMessage: '',
  formSubmitted: false,
  submitForm() {
    if (this.submitting) {
      // Form is already being submitted, prevent multiple submissions
      return;
    }

    this.submitting = true;
    let formData = new FormData($refs.submit_contact_custom_form);
    console.log('submitting form', formData);

    // Introduce a delay before form submission (e.g., 1000 milliseconds = 1 second)
    setTimeout(() => {
      fetch('/contact', {
        method: 'POST',
        body: formData
      })
      .then(response => {
        console.log(response);
        console.log(response.status);
        if (response.status === 200) {
          // Successful response
          this.formSubmitted = true;
          this.showAlert = true;
          this.alertMessage = 'Your message was successfully sent.';
          this.$refs.submit_contact_custom_form.reset() // Reset the form inputs
        } else {
          // Non-successful response
          throw new Error('Form submission failed.');
        }
      })
      .catch(error => {
        // Handle errors here
        console.error('Form submission error:', error);
        this.showAlert = true;
        this.alertMessage = 'An error occurred while submitting the form.';
        this.formSubmitted = false; // Reset formSubmitted if there was an error
      })
      .finally(() => {
        // Reset the submitting status after form submission
        this.submitting = false;
      });
    }, 1000); // 1000 milliseconds = 1 second
  }
}">

  {%- form 'contact', id: 'ContactFormCustom', class: 'bg-white', x-ref: 'submit_contact_custom_form' -%}
    <div class="field">
      <input
        class="field__input"
        autocomplete="given-name"
        type="text"
        id="ContactForm-first_name"
        name="contact[{{ 'templates.contact_custom.form.firstname' | t }}]"
        value="{% if form.first_name %}{{ form.first_name }}{% elsif customer %}{{ customer.first_name }}{% endif %}"
        placeholder="{{ 'templates.contact_custom.form.firstname' | t }}"
      >
      <label class="field__label" for="ContactForm-first_name">{{ 'templates.contact_custom.form.firstname' | t }}</label>
    </div>
    <div class="field">
      <input
        class="field__input"
        autocomplete="family-name"
        type="text"
        id="ContactForm-last_name"
        name="contact[{{ 'templates.contact_custom.form.lastname' | t }}]"
        value="{% if form.last_name %}{{ form.last_name }}{% elsif customer %}{{ customer.last_name }}{% endif %}"
        placeholder="{{ 'templates.contact_custom.form.lastname' | t }}"
      >
      <label class="field__label" for="ContactForm-last_name">{{ 'templates.contact_custom.form.lastname' | t }}</label>
    </div>
    <div class="field field--with-error">
      <input
        autocomplete="email"
        type="email"
        id="ContactForm-email"
        class="field__input"
        name="contact[email]"
        spellcheck="false"
        autocapitalize="off"
        value="{% if form.email %}{{ form.email }}{% elsif customer %}{{ customer.email }}{% endif %}"
        aria-required="true"
        {% if form.errors contains 'email' %}
          aria-invalid="true"
          aria-describedby="ContactForm-email-error"
        {% endif %}
        placeholder="{{ 'templates.contact_custom.form.email' | t }}"
      >
      <label class="field__label" for="ContactForm-email">
        {{- 'templates.contact_custom.form.email' | t }}
        <span aria-hidden="true">*</span></label
      >
      {%- if form.errors contains 'email' -%}
        <small class="contact__field-error" id="ContactForm-email-error">
          <span class="visually-hidden">{{ 'accessibility.error' | t }}</span>
          <span class="form__message">
            {%- render 'icon-error' -%}
            {{- form.errors.translated_fields.email | capitalize }}
            {{ form.errors.messages.email -}}
          </span>
        </small>
      {%- endif -%}
    </div>

    <div class="field">
      <input
        type="tel"
        id="ContactForm-phone"
        class="field__input"
        autocomplete="tel"
        name="contact[{{ 'templates.contact_custom.form.phone' | t }}]"
        pattern="[0-9\-]*"
        value="{% if form.phone %}{{ form.phone }}{% elsif customer %}{{ customer.phone }}{% endif %}"
        placeholder="{{ 'templates.contact_custom.form.phone' | t }}"
      >
      <label class="field__label" for="ContactForm-phone">{{ 'templates.contact_custom.form.phone' | t }}</label>
    </div>
    <div class="field">
      <textarea
        rows="10"
        id="ContactForm-body"
        class="text-area field__input"
        name="contact[{{ 'templates.contact_custom.form.comment' | t }}]"
        placeholder="{{ 'templates.contact_custom.form.comment' | t }}"
      >
        {{- form.body -}}
      </textarea>
      <label class="form__label field__label" for="ContactForm-body">
        {{- 'templates.contact_custom.form.comment' | t -}}
      </label>
    </div>

    <div x-show="!formSubmitted">
      <button type="button" class="primary_button alt" @click="submitForm()" x-bind:disabled="submitting">{{ 'templates.contact_custom.form.send' | t }}</button>
    </div>

    {%- if form.posted_successfully? -%}
      <h2 class="form-status form-status-list form__message" tabindex="-1" autofocus>
        {% render 'icon-success' %}
      </h2>
    {%- elsif form.errors -%}
      <div class="form__message">
        <h2 class="form-status caption-large text-body" role="alert" tabindex="-1" autofocus>
          {% render 'icon-error' %}
        </h2>
      </div>
      <ul class="form-status-list caption-large" role="list">
        <li>
          <a href="#ContactForm-email" class="link">
            {{ form.errors.translated_fields.email | capitalize }}
            {{ form.errors.messages.email }}
          </a>
        </li>
      </ul>
    {%- endif -%}

  {%- endform -%}

  <div x-show="showAlert" x-text="alertMessage" x-bind:class="{'success-message text-primary-main_dark': formSubmitted, 'error-message': !formSubmitted}"></div>
</div>



{%- liquid
  assign fetch_priority = 'auto'
  if section.index == 1
    assign fetch_priority = 'high'
  endif

  if section.settings.product != blank
    assign is_product_loaded = true
  endif
-%}

<section class="hero">
  <div class="container">
    <div class="wrapper">
      <div class="col">
        {% for block in section.blocks %}
          {% case block.type %}
            {% when 'title' %}
              {{ block.settings.title }}

            {% when 'description' %}
              <p class="hero__text">{{ block.settings.description }}</p>

            {% when 'rating' %}
              {% if is_product_loaded %}
                {% assign review_ratings = section.settings.product.metafields.custom.review_rating.value %}
                {% assign total_reviews = review_ratings.size %}
                {% assign total_rating_sum = 0 %}

                {% for rating in review_ratings %}
                  {% assign total_rating_sum = total_rating_sum | plus: rating | plus: 0 %}
                {% endfor %}

                {% assign average_rating = total_rating_sum | times: 1.0 | divided_by: total_reviews %}

                {%- render 'rating', stars_number: average_rating, reviews_number: total_reviews -%}
              {% else %}
                {%- render 'rating',
                  stars_number: block.settings.stars_number,
                  reviews_number: block.settings.reviews_number
                -%}
              {% endif %}

            {% when 'button' %}
              {% if block.settings.link != blank %}
                <a href="{{ block.settings.link }}" class="button">{{ block.settings.text }}</a>
              {% elsif is_product_loaded %}
                <a href="{{ section.settings.product.url }}" class="button">{{ block.settings.text }}</a>
              {% endif %}

            {% else %}
              <a href="{{ block.settings.link }}" class="button">{{ block.settings.text }}</a>
          {% endcase %}
        {% endfor %}
      </div>
      <div class="col">
        {% if section.settings.image != blank %}
          {{ section.settings.image | image_url: width: section.settings.image.width | image_tag: fetchpriority: fetch_priority }}
        {% elsif is_product_loaded %}
          {{ section.settings.product.featured_image | image_url:  width: section.settings.product.featured_image.width | image_tag: fetchpriority: fetch_priority }}
        {% else %}
          {{ 'detailed-apparel-1' | placeholder_svg_tag: 'placeholder-svg' }}
        {% endif %}
      </div>
    </div>
  </div>
</section>

{% schema %}
{
  "name": "t:sections.hero.name",
  "settings": [
    {
      "type": "image_picker",
      "id": "image",
      "label": "t:sections.hero.settings.image.label"
    },
    {
      "type": "product",
      "id": "product",
      "label": "t:sections.hero.settings.product.label"
    }
  ],
  "blocks": [
    {
      "type": "title",
      "name": "t:sections.hero.blocks.title.name",
      "limit": 1,
      "settings": [
        {
          "type": "richtext",
          "id": "title",
          "label": "t:sections.hero.blocks.title.settings.label",
          "default": "t:sections.hero.blocks.title.settings.default"
        }
      ]
    },
    {
      "type": "description",
      "name": "t:sections.hero.blocks.description.name",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "description",
          "label": "t:sections.hero.blocks.description.settings.label",
          "default": "t:sections.hero.blocks.description.settings.default"
        }
      ]
    },
    {
      "type": "rating",
      "name": "t:sections.hero.blocks.rating.name",
      "limit": 1,
      "settings": [
        {
          "type": "range",
          "id": "stars_number",
          "min": 0,
          "max": 5,
          "step": 0.1,
          "default": 4.8,
          "label": "t:sections.hero.blocks.rating.settings.stars_number.label",
          "info": "Does not work if product is selected in the section settings"
        },
        {
          "type": "text",
          "id": "reviews_number",
          "label": "t:sections.hero.blocks.rating.settings.reviews_number.label",
        }
      ]
    },
    {
      "type": "button",
      "name": "t:sections.hero.blocks.button.name",
      "limit": 1,
      "settings": [
        {
          "type": "url",
          "id": "link",
          "label": "t:sections.hero.blocks.button.settings.link.label"
        },
        {
          "type": "text",
          "id": "text",
          "label": "t:sections.hero.blocks.button.settings.text.label",
          "default": "t:sections.hero.blocks.button.settings.text.default"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.hero.presets.name",
      "blocks": [
        {
          "type": "title"
        },
        {
          "type": "description"
        },
        {
          "type": "rating"
        },
        {
          "type": "button"
        }
      ]
    }
  ]
}
{% endschema %}
